datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator db {
    provider = "go run github.com/steebchen/prisma-client-go"
}

model User {
    id        String    @id @default(uuid())
    email     String    @unique @db.Text
    username  String    @unique @db.Text
    password  String    @db.Text
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime  @default(now()) @map("updated_at")
    Booking   Booking[]
    Review    Review[]
}

model Hotel {
    id             String   @id @default(uuid())
    name           String
    location       String
    description    String
    rating         Float
    totalRooms     Int
    availableRooms Int      @default(0)
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt

    rooms   Room[]
    Review  Review[]
    Amenity Amenity[]
}

model Room {
    id           String   @id @default(uuid())
    roomNumber   String
    type         String
    price        Float
    availability Boolean  @default(true)
    description  String
    hotelId      String
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    Hotel   Hotel     @relation(fields: [hotelId], references: [id])
    Booking Booking[]
}

model Booking {
    id            String   @id @default(uuid())
    checkInDate   DateTime
    checkOutDate  DateTime
    paymentStatus String
    userId        String
    roomId        String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    user     User      @relation(fields: [userId], references: [id])
    room     Room      @relation(fields: [roomId], references: [id])
    payments Payment[]
}

model Customer {
    id        String   @id @default(uuid())
    name      String
    email     String   @unique
    phone     String
    address   String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Payment {
    id            String   @id @default(uuid())
    amount        Float
    paymentDate   DateTime
    PaymentMethod String
    status        String
    bookingId     String
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    booking Booking @relation(fields: [bookingId], references: [id])
}

model Review {
    id        String   @id @default(uuid())
    rating    Int
    comment   String
    userId    String
    hotelId   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user  User  @relation(fields: [userId], references: [id])
    hotel Hotel @relation(fields: [hotelId], references: [id])
}

model Amenity {
    id          String   @id @default(uuid())
    name        String
    description String
    hotelId     String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    hotel Hotel @relation(fields: [hotelId], references: [id])
}
